# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from src.main.middlewares.grpc_middlewares.protos.trade.refuse_exchange_proto import refuse_exchange_pb2 as refuse__exchange__pb2


class RefuseExchangeStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.makeRefuseExchangeFactory = channel.unary_unary(
                '/refuse_exchange.RefuseExchange/makeRefuseExchangeFactory',
                request_serializer=refuse__exchange__pb2.Request.SerializeToString,
                response_deserializer=refuse__exchange__pb2.Response.FromString,
                )


class RefuseExchangeServicer(object):
    """Missing associated documentation comment in .proto file."""

    def makeRefuseExchangeFactory(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RefuseExchangeServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'makeRefuseExchangeFactory': grpc.unary_unary_rpc_method_handler(
                    servicer.makeRefuseExchangeFactory,
                    request_deserializer=refuse__exchange__pb2.Request.FromString,
                    response_serializer=refuse__exchange__pb2.Response.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'refuse_exchange.RefuseExchange', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RefuseExchange(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def makeRefuseExchangeFactory(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/refuse_exchange.RefuseExchange/makeRefuseExchangeFactory',
            refuse__exchange__pb2.Request.SerializeToString,
            refuse__exchange__pb2.Response.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
